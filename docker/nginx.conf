events { 
  worker_connections 1024;
}

http {
  # Compression
  gzip on;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

  # Basic settings
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  server_tokens off;
  
  # MIME types
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  
  # Logs
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';
  access_log /var/log/nginx/access.log main;
  error_log /var/log/nginx/error.log;

  # Upstreams
  upstream frontend {
    server frontend:80;
  }
  upstream gateway {
    server gateway:8080;
  }
  upstream modsservice {
    server modsservice:8080;
  }

  # Security headers
  map $sent_http_content_type $csp {
    "~text/html" "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:;";
    default "";
  }

  # HTTP -> HTTPS redirection
  server {
    listen 80;
    server_name _;
    
    # Let's Encrypt validation
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }
    
    # Redirect to HTTPS
    location / {
      return 301 https://$host$request_uri;
    }
  }

  # HTTPS server
  server {
    listen 443 ssl;
    server_name _;
    
    # SSL certificates
    ssl_certificate /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;
    
    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Additional security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy $csp;
    add_header Referrer-Policy strict-origin-when-cross-origin;

    # Static files routing (uploads, images, mods)
    location /uploads/ {
      # Router vers le ModsService pour les fichiers statiques
      proxy_pass http://modsservice:8080;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      
      # Headers pour les fichiers statiques
      proxy_set_header Accept-Encoding "";
      
      # Cache pour les images/fichiers statiques
      proxy_cache_valid 200 1h;
      add_header Cache-Control "public, max-age=3600";
      
      # Support des gros fichiers (mods jusqu'à 2GB)
      client_max_body_size 2G;
      proxy_request_buffering off;
      proxy_buffering off;
      
      # Timeout adapté pour gros téléchargements
      proxy_read_timeout 300s;
      proxy_send_timeout 300s;
    }

    # Frontend routing
    location / {
      proxy_pass http://frontend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # API routing
    location /api/ {
      proxy_pass http://gateway;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      
      # Rate limiting
      limit_req zone=api burst=10 nodelay;
      
      # Request size limiting
      client_max_body_size 50M;
    }
  }

  # Rate limiting zones
  limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
}
