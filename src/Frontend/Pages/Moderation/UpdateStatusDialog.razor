@using Frontend.Models.Moderation
@using Frontend.Services.Moderation
@inject IModerationService ModerationService
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudText Typo="Typo.h6" Class="mb-3">Mettre à jour le statut</MudText>
        
        <MudForm @ref="_form" @bind-IsValid="_formIsValid">
            <MudSelect T="ReportStatus" Label="Nouveau statut" 
                      @bind-Value="_request.Status"
                      Required="true"
                      RequiredError="Veuillez sélectionner un statut"
                      Class="mb-3">
                <MudSelectItem Value="@(ReportStatus.Pending)">En attente</MudSelectItem>
                <MudSelectItem Value="@(ReportStatus.InReview)">En cours de revue</MudSelectItem>
                <MudSelectItem Value="@(ReportStatus.Resolved)">Résolu</MudSelectItem>
                <MudSelectItem Value="@(ReportStatus.Rejected)">Rejeté</MudSelectItem>
                <MudSelectItem Value="@(ReportStatus.Duplicate)">Doublon</MudSelectItem>
            </MudSelect>
            
            <MudTextField T="string"
                        Label="Notes (optionnelles)"
                        HelperText="Ajoutez des notes ou commentaires concernant cette mise à jour"
                        Lines="3"
                        Counter="200"
                        MaxLength="200"
                        @bind-Value="_request.Notes" />
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel" Variant="Variant.Text" Color="Color.Default">Annuler</MudButton>
        <MudButton OnClick="Submit" 
                 Variant="Variant.Filled" 
                 Color="Color.Primary" 
                 Disabled="@(!_formIsValid || _isSubmitting)">
            @if (_isSubmitting)
            {
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                <span class="ms-2">Traitement en cours</span>
            }
            else
            {
                <span>Mettre à jour</span>
            }
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public ContentReport Report { get; set; } = new();
    [Parameter] public ReportStatus CurrentStatus { get; set; }
    
    private UpdateReportStatusRequest _request = new();
    private MudForm _form = new();
    private bool _formIsValid;
    private bool _isSubmitting;
    
    protected override void OnInitialized()
    {
        // Initialiser avec le statut actuel
        _request.Status = CurrentStatus;
    }
    
    private async Task Submit()
    {
        await _form.Validate();
        
        if (!_formIsValid)
            return;
            
        _isSubmitting = true;
        
        try
        {
            await ModerationService.UpdateReportStatusAsync(Report.Id, _request);
            
            Snackbar.Add("Le statut du signalement a été mis à jour avec succès.", Severity.Success);
            
            MudDialog.Close(DialogResult.Ok(true));
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Erreur lors de la mise à jour du statut: {ex.Message}", Severity.Error);
        }
        finally
        {
            _isSubmitting = false;
        }
    }
    
    private void Cancel() => MudDialog.Cancel();
}
