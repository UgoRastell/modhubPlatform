@page "/reset-password-request"
@using System.ComponentModel.DataAnnotations
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar

<PageTitle>Réinitialisation de mot de passe - ModHub</PageTitle>

<MudContainer MaxWidth="MaxWidth.Small" Class="mt-8 py-8">
    <MudCard Elevation="3" Class="rounded-xl" Style="background-color: #232634;">
        <MudCardHeader>
            <MudText Typo="Typo.h4" Align="Align.Center" Class="w-100">Mot de passe oublié ?</MudText>
        </MudCardHeader>
        <MudCardContent>
            @if (!requestSent)
            {
                <MudText Typo="Typo.body1" Class="mb-4">
                    Entrez l'adresse email associée à votre compte. Nous vous enverrons un lien pour réinitialiser votre mot de passe.
                </MudText>

                <EditForm Model="@model" OnValidSubmit="HandleResetPasswordRequest">
                    <DataAnnotationsValidator />

                    <MudTextField @bind-Value="model.Email" 
                                 Label="Adresse email" 
                                 Class="mt-3"
                                 Variant="Variant.Outlined" 
                                 InputType="InputType.Email"
                                 Adornment="Adornment.Start" 
                                 AdornmentIcon="@Icons.Material.Filled.Email" />
                    <ValidationMessage For="@(() => model.Email)" />

                    <MudButton Variant="Variant.Filled" 
                              Color="Color.Primary" 
                              ButtonType="ButtonType.Submit" 
                              Size="Size.Large" 
                              FullWidth="true" 
                              Class="mt-6 reset-pwd-button"
                              Style="transition: all 0.2s ease-in-out; border-radius: 8px;"
                              Disabled="@isLoading">
                        @if (isLoading)
                        {
                            <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                            <MudText Class="ms-2">Envoi en cours...</MudText>
                        }
                        else
                        {
                            <MudText>Envoyer le lien</MudText>
                        }
                    </MudButton>
                </EditForm>
            }
            else
            {
                <MudAlert Severity="Severity.Success" Variant="Variant.Filled" Class="mb-4">
                    <MudText Typo="Typo.body1">
                        Si l'adresse email existe dans notre système, vous recevrez un message contenant les instructions pour réinitialiser votre mot de passe.
                    </MudText>
                </MudAlert>

                <MudText Typo="Typo.body2" Class="mb-4">
                    Vérifiez votre boîte de réception et vos spams. Le lien expirera dans 30 minutes.
                </MudText>
                
                <MudButton Variant="Variant.Outlined" 
                          Color="Color.Primary" 
                          OnClick="@(() => NavigationManager.NavigateTo("/login"))" 
                          FullWidth="true" 
                          Class="mt-4 back-button"
                          Style="border-radius: 8px;">
                    Retour à la connexion
                </MudButton>
            }

            <MudDivider Class="my-6" />

            <MudText Align="Align.Center">
                <MudLink Href="/login" Underline="Underline.Always">
                    Retour à la connexion
                </MudLink>
            </MudText>
        </MudCardContent>
    </MudCard>
</MudContainer>

@code {
    private class ResetPasswordRequestModel
    {
        [Required(ErrorMessage = "L'adresse email est requise")]
        [EmailAddress(ErrorMessage = "Format d'adresse email invalide")]
        public string Email { get; set; } = string.Empty;
    }

    private ResetPasswordRequestModel model = new();
    private bool isLoading;
    private bool requestSent;

    private async Task HandleResetPasswordRequest()
    {
        isLoading = true;

        try
        {
            var result = await AuthService.RequestPasswordReset(model.Email);
            
            // Pour des raisons de sécurité, nous affichons toujours un message de succès
            // même si l'email n'existe pas dans la base de données
            requestSent = true;
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Une erreur est survenue: {ex.Message}", Severity.Error);
        }
        finally
        {
            isLoading = false;
        }
    }
}
