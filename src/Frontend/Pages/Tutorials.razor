@page "/tutorials"
@using Frontend.Models
@inject NavigationManager NavigationManager

<PageTitle>Tutoriels - ModHub</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">
    <MudText Typo="Typo.h4" Class="mb-4">Tutoriels et guides</MudText>
    
    <MudPaper Class="pa-4 mb-4 rounded-xl" Elevation="3" Style="background-color: #232634;">
        <MudText Typo="Typo.body1">
            Apprenez à installer, utiliser et créer des mods grâce à nos tutoriels détaillés. 
            Que vous soyez débutant ou expert, vous trouverez des ressources adaptées à votre niveau.
        </MudText>
    </MudPaper>
    
    <!-- Filtres et recherche -->
    <MudGrid Class="mb-4">
        <MudItem xs="12" md="6">
            <MudSelect T="string" Label="Filtrer par catégorie" Variant="Variant.Outlined" Value="selectedCategory" ValueChanged="@((string val) => FilterByCategory(val))">
                <MudSelectItem Value="@("all")">Toutes les catégories</MudSelectItem>
                @foreach (var category in categories)
                {
                    <MudSelectItem Value="@category">@category</MudSelectItem>
                }
            </MudSelect>
        </MudItem>
        <MudItem xs="12" md="6">
            <MudTextField @bind-Value="searchQuery" 
                        Label="Rechercher un tutoriel" 
                        Variant="Variant.Outlined"
                        Adornment="Adornment.End"
                        AdornmentIcon="@Icons.Material.Filled.Search"
                        OnAdornmentClick="SearchTutorials" />
        </MudItem>
    </MudGrid>
    
    <!-- Tutoriels pour débutants -->
    @if (selectedCategory == "all" || selectedCategory == "Débutant")
    {
        <MudText Typo="Typo.h5" Class="mb-3 mt-6">Pour les débutants</MudText>
        <MudGrid>
            @foreach (var tutorial in tutorials.Where(t => t.Category == "Débutant" && (string.IsNullOrEmpty(searchQuery) || t.Title.Contains(searchQuery, StringComparison.OrdinalIgnoreCase))))
            {
                <MudItem xs="12" sm="6" md="4">
                    <MudCard Elevation="3" Class="rounded-xl h-100 d-flex flex-column">
                        <MudCardMedia Image="@tutorial.ImageUrl" Height="200" />
                        <MudCardContent Class="flex-grow-1">
                            <div class="d-flex justify-space-between align-center mb-2">
                                <MudChip T="string" Size="Size.Small" Color="Color.Primary">@tutorial.Category</MudChip>
                                <MudChip T="string" Size="Size.Small" Color="Color.Default">@tutorial.DifficultyLevel</MudChip>
                            </div>
                            <MudText Typo="Typo.h6">@tutorial.Title</MudText>
                            <MudText Typo="Typo.body2" Class="mud-text-secondary">@tutorial.ShortDescription</MudText>
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton Variant="Variant.Filled" 
                                    Color="Color.Primary" 
                                    FullWidth="true"
                                    EndIcon="@Icons.Material.Filled.ArrowForward"
                                    Href="@($"/tutorial/{tutorial.Id}")">
                                Voir le tutoriel
                            </MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            }
        </MudGrid>
    }
    
    <!-- Tutoriels intermédiaires -->
    @if (selectedCategory == "all" || selectedCategory == "Intermédiaire")
    {
        <MudText Typo="Typo.h5" Class="mb-3 mt-6">Pour les intermédiaires</MudText>
        <MudGrid>
            @foreach (var tutorial in tutorials.Where(t => t.Category == "Intermédiaire" && (string.IsNullOrEmpty(searchQuery) || t.Title.Contains(searchQuery, StringComparison.OrdinalIgnoreCase))))
            {
                <MudItem xs="12" sm="6" md="4">
                    <MudCard Elevation="3" Class="rounded-xl h-100 d-flex flex-column">
                        <MudCardMedia Image="@tutorial.ImageUrl" Height="200" />
                        <MudCardContent Class="flex-grow-1">
                            <div class="d-flex justify-space-between align-center mb-2">
                                <MudChip T="string" Size="Size.Small" Color="Color.Secondary">@tutorial.Category</MudChip>
                                <MudChip T="string" Size="Size.Small" Color="Color.Default">@tutorial.DifficultyLevel</MudChip>
                            </div>
                            <MudText Typo="Typo.h6">@tutorial.Title</MudText>
                            <MudText Typo="Typo.body2" Class="mud-text-secondary">@tutorial.ShortDescription</MudText>
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton Variant="Variant.Filled" 
                                    Color="Color.Secondary" 
                                    FullWidth="true"
                                    EndIcon="@Icons.Material.Filled.ArrowForward"
                                    Href="@($"/tutorial/{tutorial.Id}")">
                                Voir le tutoriel
                            </MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            }
        </MudGrid>
    }
    
    <!-- Tutoriels avancés -->
    @if (selectedCategory == "all" || selectedCategory == "Avancé")
    {
        <MudText Typo="Typo.h5" Class="mb-3 mt-6">Pour les experts</MudText>
        <MudGrid>
            @foreach (var tutorial in tutorials.Where(t => t.Category == "Avancé" && (string.IsNullOrEmpty(searchQuery) || t.Title.Contains(searchQuery, StringComparison.OrdinalIgnoreCase))))
            {
                <MudItem xs="12" sm="6" md="4">
                    <MudCard Elevation="3" Class="rounded-xl h-100 d-flex flex-column">
                        <MudCardMedia Image="@tutorial.ImageUrl" Height="200" />
                        <MudCardContent Class="flex-grow-1">
                            <div class="d-flex justify-space-between align-center mb-2">
                                <MudChip T="string" Size="Size.Small" Color="Color.Error">@tutorial.Category</MudChip>
                                <MudChip T="string" Size="Size.Small" Color="Color.Default">@tutorial.DifficultyLevel</MudChip>
                            </div>
                            <MudText Typo="Typo.h6">@tutorial.Title</MudText>
                            <MudText Typo="Typo.body2" Class="mud-text-secondary">@tutorial.ShortDescription</MudText>
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton Variant="Variant.Filled" 
                                    Color="Color.Error" 
                                    FullWidth="true"
                                    EndIcon="@Icons.Material.Filled.ArrowForward"
                                    Href="@($"/tutorial/{tutorial.Id}")">
                                Voir le tutoriel
                            </MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            }
        </MudGrid>
    }
    
    <!-- Guides par jeu -->
    <MudText Typo="Typo.h5" Class="mb-3 mt-8">Guides par jeu</MudText>
    <MudGrid>
        @foreach (var game in popularGames)
        {
            <MudItem xs="6" sm="4" md="3" lg="2">
                <MudCard Elevation="3" Class="rounded-xl text-center">
                    <MudCardMedia Image="@game.ImageUrl" Height="120" />
                    <MudCardContent Class="pa-2">
                        <MudText Typo="Typo.body1">@game.Name</MudText>
                        <MudText Typo="Typo.caption">@game.TutorialCount tutoriels</MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton Variant="Variant.Text" 
                                 Color="Color.Primary" 
                                 FullWidth="true"
                                 Href="@($"/tutorials/game/{game.Id}")">
                            Voir
                        </MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        }
    </MudGrid>
    
    <!-- Devenir créateur -->
    <MudPaper Class="pa-6 mt-8 rounded-xl d-flex flex-column flex-md-row gap-4 align-center" Elevation="3" Style="background-color: #232634;">
        <div class="flex-grow-1">
            <MudText Typo="Typo.h5" Class="mb-2">Envie de devenir créateur de mods ?</MudText>
            <MudText Typo="Typo.body1" Class="mb-4">
                Découvrez notre programme pour les créateurs de contenu et partagez vos connaissances en créant vos propres tutoriels.
            </MudText>
            <MudButton Variant="Variant.Filled" 
                     Color="Color.Primary"
                     StartIcon="@Icons.Material.Filled.Stars"
                     Href="/creators-program">
                Rejoindre le programme créateur
            </MudButton>
        </div>
        <MudImage Src="/images/creator-program.svg" Alt="Programme créateur" Width="200" />
    </MudPaper>
    
    <!-- Forum et aide -->
    <MudGrid Class="mt-6">
        <MudItem xs="12" md="6">
            <MudPaper Class="pa-4 rounded-xl h-100" Elevation="3" Style="background-color: #232634;">
                <MudText Typo="Typo.h6" Class="mb-3">Besoin d'aide spécifique ?</MudText>
                <MudText Typo="Typo.body2" Class="mb-4">
                    Vous ne trouvez pas ce que vous cherchez dans nos tutoriels ?
                    Posez votre question dans notre forum communautaire et obtenez de l'aide de nos experts.
                </MudText>
                <MudButton Variant="Variant.Outlined" 
                         Color="Color.Primary" 
                         StartIcon="@Icons.Material.Filled.Forum"
                         Href="/forums">
                    Accéder au forum
                </MudButton>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" md="6">
            <MudPaper Class="pa-4 rounded-xl h-100" Elevation="3" Style="background-color: #232634;">
                <MudText Typo="Typo.h6" Class="mb-3">Proposer un nouveau tutoriel</MudText>
                <MudText Typo="Typo.body2" Class="mb-4">
                    Vous avez des connaissances à partager ou un sujet que vous aimeriez voir couvert ?
                    Faites-nous part de vos idées et suggestions pour de nouveaux tutoriels.
                </MudText>
                <MudButton Variant="Variant.Outlined" 
                         Color="Color.Secondary" 
                         StartIcon="@Icons.Material.Filled.Lightbulb"
                         Href="/contact?subject=Suggestion%20de%20tutoriel">
                    Suggérer un tutoriel
                </MudButton>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    // Classes pour les modèles de données
    private class Tutorial
    {
        public string Id { get; set; }
        public string Title { get; set; }
        public string ShortDescription { get; set; }
        public string ImageUrl { get; set; }
        public string Category { get; set; }
        public string DifficultyLevel { get; set; }
        public string GameId { get; set; }
        public string GameName { get; set; }
    }
    
    private class Game
    {
        public string Id { get; set; }
        public string Name { get; set; }
        public string ImageUrl { get; set; }
        public int TutorialCount { get; set; }
    }
    
    // Variables
    private string selectedCategory = "all";
    private string searchQuery = "";
    private List<string> categories = new List<string> { "Débutant", "Intermédiaire", "Avancé" };
    
    // Données de démonstration
    private List<Tutorial> tutorials = new List<Tutorial>
    {
        // Tutoriels pour débutants
        new Tutorial
        {
            Id = "getting-started",
            Title = "Débuter avec les mods : guide complet pour les nouveaux joueurs",
            ShortDescription = "Découvrez les bases du modding et apprenez comment installer votre premier mod.",
            ImageUrl = "/images/tutorials/getting-started.jpg",
            Category = "Débutant",
            DifficultyLevel = "Facile",
            GameId = "minecraft",
            GameName = "Minecraft"
        },
        new Tutorial
        {
            Id = "mod-managers",
            Title = "Comment utiliser les gestionnaires de mods",
            ShortDescription = "Guide des différents gestionnaires de mods et comment les configurer correctement.",
            ImageUrl = "/images/tutorials/mod-managers.jpg",
            Category = "Débutant",
            DifficultyLevel = "Facile",
            GameId = "skyrim",
            GameName = "Skyrim"
        },
        new Tutorial
        {
            Id = "mod-troubleshooting",
            Title = "Résolution des problèmes courants de mods",
            ShortDescription = "Découvrez comment identifier et résoudre les problèmes d'installation les plus fréquents.",
            ImageUrl = "/images/tutorials/troubleshooting.jpg",
            Category = "Débutant",
            DifficultyLevel = "Modéré",
            GameId = "fallout4",
            GameName = "Fallout 4"
        },
        
        // Tutoriels intermédiaires
        new Tutorial
        {
            Id = "load-order",
            Title = "Optimiser l'ordre de chargement des mods",
            ShortDescription = "Apprenez à organiser vos mods pour éviter les conflits et améliorer les performances.",
            ImageUrl = "/images/tutorials/load-order.jpg",
            Category = "Intermédiaire",
            DifficultyLevel = "Modéré",
            GameId = "skyrim",
            GameName = "Skyrim"
        },
        new Tutorial
        {
            Id = "ini-configuration",
            Title = "Configuration avancée des fichiers INI",
            ShortDescription = "Maîtrisez les paramètres de configuration pour améliorer visuels et performances.",
            ImageUrl = "/images/tutorials/ini-config.jpg",
            Category = "Intermédiaire",
            DifficultyLevel = "Modéré",
            GameId = "witcher3",
            GameName = "The Witcher 3"
        },
        new Tutorial
        {
            Id = "custom-collections",
            Title = "Créer des collections de mods personnalisées",
            ShortDescription = "Guide pour assembler et partager des ensembles de mods compatibles et thématiques.",
            ImageUrl = "/images/tutorials/collections.jpg",
            Category = "Intermédiaire",
            DifficultyLevel = "Avancé",
            GameId = "stardewvalley",
            GameName = "Stardew Valley"
        },
        
        // Tutoriels avancés
        new Tutorial
        {
            Id = "texture-editing",
            Title = "Création et édition de textures pour mods",
            ShortDescription = "Techniques avancées pour créer et modifier des textures de haute qualité.",
            ImageUrl = "/images/tutorials/textures.jpg",
            Category = "Avancé",
            DifficultyLevel = "Expert",
            GameId = "fallout4",
            GameName = "Fallout 4"
        },
        new Tutorial
        {
            Id = "scripting",
            Title = "Introduction au scripting pour mods",
            ShortDescription = "Les bases de la programmation et du scripting pour créer des mods interactifs.",
            ImageUrl = "/images/tutorials/scripting.jpg",
            Category = "Avancé",
            DifficultyLevel = "Expert",
            GameId = "skyrim",
            GameName = "Skyrim"
        },
        new Tutorial
        {
            Id = "3d-modeling",
            Title = "Modélisation 3D pour les mods de jeux",
            ShortDescription = "Créez des modèles 3D personnalisés pour vos mods à l'aide de Blender.",
            ImageUrl = "/images/tutorials/3d-modeling.jpg",
            Category = "Avancé",
            DifficultyLevel = "Expert",
            GameId = "cyberpunk2077",
            GameName = "Cyberpunk 2077"
        }
    };
    
    private List<Game> popularGames = new List<Game>
    {
        new Game { Id = "skyrim", Name = "Skyrim", ImageUrl = "/images/games/skyrim.jpg", TutorialCount = 24 },
        new Game { Id = "minecraft", Name = "Minecraft", ImageUrl = "/images/games/minecraft.jpg", TutorialCount = 18 },
        new Game { Id = "fallout4", Name = "Fallout 4", ImageUrl = "/images/games/fallout4.jpg", TutorialCount = 15 },
        new Game { Id = "stardewvalley", Name = "Stardew Valley", ImageUrl = "/images/games/stardewvalley.jpg", TutorialCount = 12 },
        new Game { Id = "witcher3", Name = "The Witcher 3", ImageUrl = "/images/games/witcher3.jpg", TutorialCount = 10 },
        new Game { Id = "cyberpunk2077", Name = "Cyberpunk 2077", ImageUrl = "/images/games/cyberpunk2077.jpg", TutorialCount = 8 }
    };
    
    // Méthodes
    private void FilterByCategory(string category)
    {
        selectedCategory = category;
        StateHasChanged();
    }
    
    private void SearchTutorials()
    {
        // Dans une implémentation réelle, ce serait un appel API pour rechercher les tutoriels
        StateHasChanged();
    }
}
