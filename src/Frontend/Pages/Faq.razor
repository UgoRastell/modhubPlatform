@page "/faq"
@using Frontend.Models
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager

<PageTitle>FAQ - ModHub</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">
    <div class="page-header animate-on-scroll">
        <MudText Typo="Typo.h3" Class="gradient-title mb-2">Foire aux questions</MudText>
        <div class="title-underline mb-4"></div>
    </div>
    
    <MudPaper Class="intro-panel pa-4 mb-6 rounded-xl animate-on-scroll" Elevation="3">
        <div class="intro-panel-glow"></div>
        <MudText Typo="Typo.body1" Class="intro-text">
            Retrouvez ici les réponses aux questions les plus fréquemment posées par notre communauté.
            Si vous ne trouvez pas la réponse à votre question, n'hésitez pas à nous contacter directement via notre <MudLink Href="/contact" Class="contact-link">page de contact</MudLink>.
        </MudText>
    </MudPaper>
    
    <MudGrid>
        <MudItem xs="12" md="3">
            <MudPaper Class="sidebar-panel pa-4 rounded-xl sticky-top animate-on-scroll" Elevation="4" Style="top: 24px;">
                <div class="sidebar-glow"></div>
                <div class="category-header mb-4">
                    <MudIcon Icon="@Icons.Material.Filled.Category" Class="category-icon mr-2" />
                    <MudText Typo="Typo.h6" Class="gradient-subtitle">Catégories</MudText>
                </div>
                
                <MudList T="string" Clickable Dense Class="category-list">
                    @foreach (var category in faqCategories)
                    {
                        <MudListItem T="string" OnClick="@(() => ScrollToCategory(category.Id))" Dense="true" Class="category-item">
                            <div class="d-flex gap-3 align-center">
                                <MudIcon Icon="@category.Icon" Size="Size.Small" Class="category-item-icon" />
                                <MudText Class="category-item-text">@category.Name</MudText>
                            </div>
                        </MudListItem>
                    }
                </MudList>
                
                <div class="animated-gradient-divider my-4"></div>
                
                <MudButton StartIcon="@Icons.Material.Filled.Search" 
                          FullWidth="true" 
                          Color="Color.Secondary" 
                          Variant="Variant.Filled"
                          OnClick="@(() => searchDialogOpen = true)"
                          Class="search-button">
                    <span class="button-text">Rechercher</span>
                </MudButton>
            </MudPaper>
        </MudItem>
        
        <MudItem xs="12" md="9">
            @foreach (var category in faqCategories)
            {
                <div id="@category.Id" class="scroll-target mb-8 animate-on-scroll">
                    <MudPaper Class="category-panel pa-5 rounded-xl position-relative overflow-hidden" Elevation="4">
                        <div class="category-panel-glow"></div>
                        <div class="d-flex align-center mb-5">
                            <div class="category-icon-container mr-3">
                                <MudIcon Icon="@category.Icon" Size="Size.Medium" Class="category-panel-icon" />
                            </div>
                            <MudText Typo="Typo.h5" Class="gradient-heading">@category.Name</MudText>
                        </div>
                        
                        <MudExpansionPanels MultiExpansion="true" DisableBorders="true" Elevation="0" Class="faq-panels">
                            @foreach (var item in faqItems.Where(i => i.CategoryId == category.Id))
                            {
                                <MudExpansionPanel Class="faq-panel mb-3" Style="background-color: rgba(255, 255, 255, 0.03);">
                                    <TitleContent>
                                        <div class="d-flex align-center py-2">
                                            <MudIcon Icon="@Icons.Material.Filled.QuestionAnswer" Size="Size.Small" Class="faq-question-icon mr-3" />
                                            <MudText Typo="Typo.h6" Class="faq-question">@item.Question</MudText>
                                        </div>
                                    </TitleContent>
                                    <ChildContent>
                                        <div class="faq-answer pa-3">
                                            <MudText Typo="Typo.body1" Class="answer-text">@((MarkupString)item.Answer)</MudText>
                                        </div>
                                    </ChildContent>
                                </MudExpansionPanel>
                            }
                        </MudExpansionPanels>
                    </MudPaper>
                </div>
            }
            
            <MudPaper Class="cta-panel pa-5 rounded-xl mt-8 position-relative overflow-hidden animate-on-scroll" Elevation="4">
                <div class="cta-panel-glow"></div>
                <MudText Typo="Typo.h5" Class="gradient-heading mb-3">Vous n'avez pas trouvé votre réponse ?</MudText>
                <MudText Typo="Typo.body1" Class="mb-5 cta-text">
                    Si vous n'avez pas trouvé la réponse à votre question, nous sommes là pour vous aider :
                </MudText>
                <div class="d-flex flex-wrap gap-3">
                    <MudButton Color="Color.Primary" 
                              Variant="Variant.Filled" 
                              Href="/contact" 
                              StartIcon="@Icons.Material.Filled.Email"
                              Class="cta-button contact-button">
                        <span class="button-text">Nous contacter</span>
                    </MudButton>
                    <MudButton Color="Color.Secondary" 
                              Variant="Variant.Filled" 
                              Href="/forums"
                              StartIcon="@Icons.Material.Filled.Forum"
                              Class="cta-button forum-button">
                        <span class="button-text">Poser votre question sur le forum</span>
                    </MudButton>
                </div>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

<!-- Dialogue de recherche -->
<MudDialog @bind-IsVisible="searchDialogOpen" Options="dialogOptions" Class="search-dialog">
    <TitleContent>
        <div class="d-flex align-center gap-2">
            <MudIcon Icon="@Icons.Material.Filled.Search" Class="search-icon mr-2" /> 
            <MudText Typo="Typo.h6" Class="dialog-title">Recherche dans la FAQ</MudText>
        </div>
    </TitleContent>
    <DialogContent>
        <MudTextField @bind-Value="searchQuery" 
                     Label="Rechercher une question" 
                     Variant="Variant.Outlined" 
                     Adornment="Adornment.End" 
                     AdornmentIcon="@Icons.Material.Filled.Search"
                     Class="search-field mb-4"
                     Immediate="true"
                     DebounceInterval="300"
                     OnDebounceIntervalElapsed="SearchFaq" />
                     
        @if (!string.IsNullOrEmpty(searchQuery) && searchResults.Any())
        {
            <div class="search-results-header">
                <MudText Typo="Typo.subtitle1" Class="mb-3 gradient-subtitle">Résultats de recherche</MudText>
            </div>
            <MudList T="string" Class="search-results">
                @foreach (var result in searchResults)
                {
                    <MudListItem T="string" OnClick="@(() => SelectSearchResult(result))" Dense="true" Class="search-result-item">
                        <div class="d-flex flex-column">
                            <MudText Class="search-result-question">@result.Question</MudText>
                            <div class="d-flex align-center gap-2 mt-1">
                                <MudIcon Icon="@faqCategories.First(c => c.Id == result.CategoryId).Icon" Size="Size.Small" Class="search-result-category-icon" />
                                <MudText Typo="Typo.caption" Class="search-result-category">
                                    @faqCategories.First(c => c.Id == result.CategoryId).Name
                                </MudText>
                            </div>
                        </div>
                    </MudListItem>
                    <MudDivider Class="search-result-divider" />
                }
            </MudList>
        }
        else if (!string.IsNullOrEmpty(searchQuery))
        {
            <MudAlert Severity="Severity.Info" Variant="Variant.Filled" Class="search-no-results">Aucun résultat trouvé pour votre recherche.</MudAlert>
        }
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Secondary" Variant="Variant.Filled" OnClick="@(() => searchDialogOpen = false)" Class="close-button">
            <span class="button-text">Fermer</span>
        </MudButton>
    </DialogActions>
</MudDialog>

<style>
    /* Page Header and Title */
    .page-header {
        margin-bottom: 2rem;
    }
    
    .gradient-title {
        background: linear-gradient(135deg, var(--mud-palette-primary) 0%, var(--mud-palette-secondary) 100%);
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
        font-weight: 700;
        letter-spacing: 0.5px;
    }
    
    .title-underline {
        height: 4px;
        width: 80px;
        background: linear-gradient(90deg, var(--mud-palette-primary) 0%, var(--mud-palette-secondary) 100%);
        border-radius: 2px;
        margin-bottom: 1.5rem;
    }
    
    /* Introduction Panel */
    .intro-panel {
        background-color: #232634;
        position: relative;
        overflow: hidden;
        border-radius: 16px;
        border: 1px solid rgba(255, 255, 255, 0.05);
        transition: all 0.3s ease;
    }
    
    .intro-panel-glow {
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: radial-gradient(circle, rgba(var(--mud-palette-primary-rgb), 0.1) 0%, rgba(0, 0, 0, 0) 70%);
        opacity: 0.7;
        z-index: 0;
    }
    
    .intro-text {
        position: relative;
        z-index: 1;
        color: rgba(255, 255, 255, 0.9);
        line-height: 1.6;
    }
    
    .contact-link {
        color: var(--mud-palette-secondary);
        text-decoration: none;
        font-weight: 500;
        transition: color 0.2s ease;
    }
    
    .contact-link:hover {
        color: var(--mud-palette-secondary-lighten);
        text-decoration: underline;
    }
    
    /* Sidebar Panel */
    .sidebar-panel {
        background-color: #232634;
        position: relative;
        border: 1px solid rgba(255, 255, 255, 0.05);
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    
    .sidebar-glow {
        position: absolute;
        top: -10px;
        right: -10px;
        width: 150px;
        height: 150px;
        background: radial-gradient(circle, rgba(var(--mud-palette-secondary-rgb), 0.15) 0%, rgba(0, 0, 0, 0) 70%);
        opacity: 0.7;
        z-index: 0;
    }
    
    .category-header {
        display: flex;
        align-items: center;
        position: relative;
        z-index: 1;
    }
    
    .gradient-subtitle {
        background: linear-gradient(135deg, var(--mud-palette-secondary) 0%, var(--mud-palette-primary) 100%);
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
        font-weight: 600;
    }
    
    .category-icon {
        color: var(--mud-palette-secondary);
        animation: pulse 2s infinite;
    }
    
    .category-list {
        position: relative;
        z-index: 1;
    }
    
    .category-item {
        border-radius: 8px;
        margin-bottom: 4px;
        transition: background-color 0.2s ease, transform 0.2s ease;
    }
    
    .category-item:hover {
        background-color: rgba(255, 255, 255, 0.05);
        transform: translateX(4px);
    }
    
    .category-item-icon {
        color: var(--mud-palette-secondary);
        transition: transform 0.3s ease;
    }
    
    .category-item:hover .category-item-icon {
        transform: scale(1.2);
    }
    
    .category-item-text {
        font-weight: 500;
        color: rgba(255, 255, 255, 0.9);
    }
    
    .animated-gradient-divider {
        height: 2px;
        background: linear-gradient(90deg, transparent, var(--mud-palette-primary), var(--mud-palette-secondary), transparent);
        background-size: 200% 100%;
        animation: gradientMove 3s ease infinite;
    }
    
    .search-button {
        position: relative;
        z-index: 1;
        border-radius: 8px;
        overflow: hidden;
        transition: transform 0.3s ease;
    }
    
    .search-button:hover {
        transform: translateY(-2px);
    }
    
    .button-text {
        font-weight: 500;
    }
    
    /* Category Panels */
    .category-panel {
        background-color: #232634;
        position: relative;
        border: 1px solid rgba(255, 255, 255, 0.05);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
        transition: transform 0.3s ease;
    }
    
    .category-panel:hover {
        transform: translateY(-4px);
    }
    
    .category-panel-glow {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, 
            rgba(var(--mud-palette-primary-rgb), 0.05) 0%, 
            rgba(var(--mud-palette-secondary-rgb), 0.05) 100%);
        z-index: 0;
    }
    
    .category-icon-container {
        background: linear-gradient(135deg, var(--mud-palette-primary) 0%, var(--mud-palette-secondary) 100%);
        width: 40px;
        height: 40px;
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 50%;
    }
    
    .category-panel-icon {
        color: white;
    }
    
    .gradient-heading {
        background: linear-gradient(135deg, var(--mud-palette-primary) 0%, var(--mud-palette-secondary) 100%);
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
        font-weight: 600;
        letter-spacing: 0.3px;
    }
    
    /* FAQ Panels */
    .faq-panels {
        position: relative;
        z-index: 1;
    }
    
    .faq-panel {
        border-radius: 8px;
        overflow: hidden;
        transition: box-shadow 0.3s ease, transform 0.3s ease;
        border-left: 3px solid transparent;
    }
    
    .faq-panel:hover {
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        transform: translateX(2px);
        border-left: 3px solid var(--mud-palette-secondary);
    }
    
    .faq-question-icon {
        color: var(--mud-palette-secondary);
    }
    
    .faq-question {
        color: rgba(255, 255, 255, 0.9);
        font-weight: 500;
    }
    
    .faq-answer {
        background-color: rgba(0, 0, 0, 0.2);
        border-radius: 4px;
        margin-top: 8px;
    }
    
    .answer-text {
        color: rgba(255, 255, 255, 0.85);
        line-height: 1.6;
    }
    
    .answer-text a {
        color: var(--mud-palette-secondary);
        text-decoration: none;
        transition: color 0.2s ease;
    }
    
    .answer-text a:hover {
        color: var(--mud-palette-secondary-lighten);
        text-decoration: underline;
    }
    
    /* CTA Panel */
    .cta-panel {
        background-color: #1c2030;
        position: relative;
        border: 1px solid rgba(255, 255, 255, 0.05);
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
        transition: transform 0.3s ease;
    }
    
    .cta-panel-glow {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, 
            rgba(var(--mud-palette-primary-rgb), 0.1) 0%, 
            rgba(var(--mud-palette-secondary-rgb), 0.1) 100%);
        z-index: 0;
    }
    
    .cta-text {
        position: relative;
        z-index: 1;
        color: rgba(255, 255, 255, 0.85);
        max-width: 800px;
    }
    
    .cta-button {
        position: relative;
        z-index: 1;
        border-radius: 8px;
        padding: 10px 20px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    
    .cta-button:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    }
    
    .contact-button {
        background: linear-gradient(135deg, var(--mud-palette-primary) 0%, var(--mud-palette-primary-darken) 100%);
    }
    
    .forum-button {
        background: linear-gradient(135deg, var(--mud-palette-secondary) 0%, var(--mud-palette-secondary-darken) 100%);
    }
    
    /* Search Dialog */
    .search-dialog {
        border-radius: 16px;
    }
    
    .search-dialog :deep(.mud-dialog-content) {
        padding-top: 24px;
    }
    
    .dialog-title {
        color: var(--mud-palette-primary);
        font-weight: 600;
    }
    
    .search-icon {
        color: var(--mud-palette-secondary);
    }
    
    .search-field :deep(.mud-input) {
        border-radius: 8px;
    }
    
    .search-field :deep(.mud-input-adornment) {
        color: var(--mud-palette-secondary);
    }
    
    .search-results {
        max-height: 400px;
        overflow-y: auto;
    }
    
    .search-result-item {
        border-radius: 8px;
        padding: 8px;
        transition: background-color 0.2s ease, transform 0.2s ease;
    }
    
    .search-result-item:hover {
        background-color: rgba(var(--mud-palette-primary-rgb), 0.05);
        transform: translateY(-2px);
    }
    
    .search-result-question {
        font-weight: 500;
    }
    
    .search-result-category {
        color: var(--mud-palette-secondary);
    }
    
    .search-result-category-icon {
        color: var(--mud-palette-secondary);
    }
    
    .search-result-divider {
        margin: 8px 0;
        opacity: 0.3;
    }
    
    .search-no-results {
        border-radius: 8px;
    }
    
    .close-button {
        border-radius: 8px;
    }
    
    /* Animations */
    @@keyframes pulse {
        0% {
            opacity: 0.8;
            transform: scale(1);
        }
        50% {
            opacity: 1;
            transform: scale(1.1);
        }
        100% {
            opacity: 0.8;
            transform: scale(1);
        }
    }
    
    @@keyframes gradientMove {
        0% {
            background-position: 0% 50%;
        }
        50% {
            background-position: 100% 50%;
        }
        100% {
            background-position: 0% 50%;
        }
    }
    
    /* Scroll Animation */
    .animate-on-scroll {
        opacity: 0;
        transform: translateY(30px);
        animation: fadeInUp 0.8s ease forwards;
    }
    
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    /* Responsive Adjustments */
    @media (max-width: 960px) {
        .sidebar-panel {
            position: relative !important;
            top: 0 !important;
            margin-bottom: 24px;
        }
    }
</style>

@code {
    // Classes pour structurer les données
    private class FaqCategory
    {
        public string Id { get; set; }
        public string Name { get; set; }
        public string Icon { get; set; }
    }
    
    private class FaqItem
    {
        public string Question { get; set; }
        public string Answer { get; set; }
        public string CategoryId { get; set; }
    }
    
    // Données
    private List<FaqCategory> faqCategories = new List<FaqCategory>
    {
        new FaqCategory { Id = "general", Name = "Questions générales", Icon = Icons.Material.Filled.Info },
        new FaqCategory { Id = "account", Name = "Compte et profil", Icon = Icons.Material.Filled.AccountCircle },
        new FaqCategory { Id = "mods", Name = "Utilisation des mods", Icon = Icons.Material.Filled.Extension },
        new FaqCategory { Id = "creators", Name = "Créateurs de mods", Icon = Icons.Material.Filled.Build },
        new FaqCategory { Id = "premium", Name = "ModHub Premium", Icon = Icons.Material.Filled.Stars },
        new FaqCategory { Id = "technical", Name = "Support technique", Icon = Icons.Material.Filled.Settings }
    };
    
    private List<FaqItem> faqItems = new List<FaqItem>
    {
        // Questions générales
        new FaqItem 
        { 
            Question = "Qu'est-ce que ModHub ?", 
            Answer = "ModHub est une plateforme dédiée au partage et à la découverte de mods pour jeux vidéo. Notre mission est de créer un environnement où les créateurs peuvent partager leurs œuvres et où les joueurs peuvent facilement trouver et installer des mods de qualité.",
            CategoryId = "general" 
        },
        new FaqItem 
        { 
            Question = "ModHub est-il gratuit ?", 
            Answer = "ModHub propose une version gratuite avec des fonctionnalités de base et un abonnement premium avec des avantages supplémentaires. La plupart des mods sont disponibles gratuitement, mais certains créateurs peuvent proposer des versions premium de leurs créations.",
            CategoryId = "general" 
        },
        new FaqItem 
        { 
            Question = "Quels jeux sont supportés par ModHub ?", 
            Answer = "ModHub supporte actuellement plus de 100 jeux populaires, dont Minecraft, Skyrim, Fallout 4, Stardew Valley, et bien d'autres. Consultez notre <a href='/games'>page des jeux supportés</a> pour la liste complète.",
            CategoryId = "general" 
        },
        
        // Compte et profil
        new FaqItem 
        { 
            Question = "Comment créer un compte ?", 
            Answer = "Pour créer un compte, cliquez sur \"S'inscrire\" dans le menu de navigation, puis remplissez le formulaire d'inscription avec votre adresse e-mail et un mot de passe sécurisé. Vous pouvez également vous inscrire avec votre compte Google ou Discord.",
            CategoryId = "account" 
        },
        new FaqItem 
        { 
            Question = "Comment modifier mon profil ?", 
            Answer = "Une fois connecté, accédez à votre profil en cliquant sur votre nom d'utilisateur, puis sur \"Mon profil\". Cliquez ensuite sur \"Modifier le profil\" pour changer votre avatar, votre description ou d'autres informations personnelles.",
            CategoryId = "account" 
        },
        new FaqItem 
        { 
            Question = "J'ai oublié mon mot de passe, comment le réinitialiser ?", 
            Answer = "Sur la page de connexion, cliquez sur \"Mot de passe oublié\". Vous recevrez un email avec les instructions pour réinitialiser votre mot de passe. Si vous ne recevez pas l'email, vérifiez votre dossier de spam.",
            CategoryId = "account" 
        },
        
        // Utilisation des mods
        new FaqItem 
        { 
            Question = "Comment installer un mod ?", 
            Answer = "Les méthodes d'installation varient selon le jeu. Sur la page de chaque mod, vous trouverez un guide d'installation spécifique. En général, vous devez télécharger le mod, puis le placer dans le dossier approprié de votre jeu ou utiliser un gestionnaire de mods compatible.",
            CategoryId = "mods" 
        },
        new FaqItem 
        { 
            Question = "Comment résoudre les conflits entre mods ?", 
            Answer = "Les conflits entre mods sont courants. Pour les résoudre, vérifiez la compatibilité des mods avant l'installation, utilisez des outils de gestion de charge comme LOOT pour les jeux Bethesda, ou consultez les forums pour des conseils spécifiques à votre problème.",
            CategoryId = "mods" 
        },
        new FaqItem 
        { 
            Question = "Puis-je télécharger plusieurs mods à la fois ?", 
            Answer = "Les utilisateurs premium peuvent télécharger plusieurs mods simultanément et bénéficient de vitesses de téléchargement plus rapides. Les utilisateurs gratuits sont limités à un téléchargement à la fois à vitesse standard.",
            CategoryId = "mods" 
        },
        
        // Créateurs de mods
        new FaqItem 
        { 
            Question = "Comment devenir créateur de mods sur ModHub ?", 
            Answer = "Pour devenir créateur, inscrivez-vous sur ModHub, puis demandez le statut de créateur dans votre profil. Vous devrez fournir des informations sur vos compétences et expérience en modding. Une fois approuvé, vous pourrez publier vos propres mods.",
            CategoryId = "creators" 
        },
        new FaqItem 
        { 
            Question = "Comment monétiser mes créations ?", 
            Answer = "ModHub offre plusieurs options de monétisation aux créateurs : des mods premium payants, un système de dons, ou un modèle d'abonnement pour accéder à du contenu exclusif. Vous pouvez configurer ces options dans votre espace créateur.",
            CategoryId = "creators" 
        },
        new FaqItem 
        { 
            Question = "Quel pourcentage des revenus revient aux créateurs ?", 
            Answer = "Les créateurs reçoivent 70% des revenus générés par leurs mods premium. Les 30% restants permettent à ModHub de couvrir les frais d'hébergement, de traitement des paiements et de continuer à améliorer la plateforme.",
            CategoryId = "creators" 
        },
        
        // ModHub Premium
        new FaqItem 
        { 
            Question = "Quels sont les avantages de ModHub Premium ?", 
            Answer = "ModHub Premium offre plusieurs avantages : téléchargements multiples et plus rapides, accès anticipé à certains mods, absence de publicités, badge premium sur votre profil, support prioritaire, et remises sur les mods payants.",
            CategoryId = "premium" 
        },
        new FaqItem 
        { 
            Question = "Combien coûte l'abonnement Premium ?", 
            Answer = "ModHub Premium est disponible pour 4,99€ par mois ou 49,99€ par an (soit 2 mois gratuits). Nous proposons occasionnellement des promotions, notamment pour les étudiants et les créateurs actifs.",
            CategoryId = "premium" 
        },
        new FaqItem 
        { 
            Question = "Comment annuler mon abonnement Premium ?", 
            Answer = "Pour annuler votre abonnement, accédez à vos paramètres de compte, puis à la section \"Abonnement\". Cliquez sur \"Gérer mon abonnement\" puis \"Annuler l'abonnement\". Vous conserverez vos avantages premium jusqu'à la fin de la période payée.",
            CategoryId = "premium" 
        },
        
        // Support technique
        new FaqItem 
        { 
            Question = "Mon jeu plante après l'installation d'un mod, que faire ?", 
            Answer = "En cas de plantage, essayez de : 1) Désactiver le mod récemment installé pour voir s'il est responsable, 2) Vérifier que vous avez les prérequis nécessaires (comme Script Extender pour Skyrim), 3) Consulter la page du mod pour des problèmes connus, ou 4) Demander de l'aide sur nos forums.",
            CategoryId = "technical" 
        },
        new FaqItem 
        { 
            Question = "Le mod que j'ai téléchargé ne fonctionne pas, comment le dépanner ?", 
            Answer = "Vérifiez d'abord que vous avez suivi exactement les instructions d'installation. Assurez-vous que votre jeu est à jour et compatible avec la version du mod. Vérifiez aussi que vous avez installé tous les prérequis mentionnés par le créateur.",
            CategoryId = "technical" 
        },
        new FaqItem 
        { 
            Question = "Comment signaler un bug ou un problème avec ModHub ?", 
            Answer = "Vous pouvez signaler un bug via notre <a href='/contact'>formulaire de contact</a> en sélectionnant \"Signaler un bug\" comme sujet. Décrivez précisément le problème rencontré, les étapes pour le reproduire, et joignez des captures d'écran si possible.",
            CategoryId = "technical" 
        }
    };
    
    // Variables pour la recherche
    private bool searchDialogOpen;
    private string searchQuery = "";
    private List<FaqItem> searchResults = new List<FaqItem>();
    
    private DialogOptions dialogOptions = new DialogOptions { 
        CloseOnEscapeKey = true,
        MaxWidth = MaxWidth.Medium,
        FullWidth = true
    };
    
    // Méthodes
    private void ScrollToCategory(string categoryId)
    {
        // Dans une implémentation réelle, utiliserait JS Interop pour faire défiler vers la catégorie
        NavigationManager.NavigateTo($"/faq#{categoryId}", forceLoad: false);
    }
    
    private void SearchFaq()
    {
        if (string.IsNullOrWhiteSpace(searchQuery))
        {
            searchResults.Clear();
            return;
        }
        
        // Recherche simple basée sur le contenu des questions et réponses
        searchResults = faqItems
            .Where(item => 
                item.Question.Contains(searchQuery, StringComparison.OrdinalIgnoreCase) || 
                item.Answer.Contains(searchQuery, StringComparison.OrdinalIgnoreCase))
            .ToList();
    }
    
    private void SelectSearchResult(FaqItem result)
    {
        searchDialogOpen = false;
        
        // Dans une implémentation réelle, utiliserait JS Interop pour faire défiler vers l'élément
        // et peut-être mettre en surbrillance la question
        NavigationManager.NavigateTo($"/faq#{result.CategoryId}", forceLoad: false);
    }
}
