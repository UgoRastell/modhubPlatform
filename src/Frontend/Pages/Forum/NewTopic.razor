@page "/forum/new-topic"
@attribute [Authorize]
@using Frontend.Models.Forum
@using Frontend.Services.Forum
@using MudBlazor
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager
@inject IForumService ForumService

<PageTitle>Nouveau sujet - ModHub</PageTitle>

<MudContainer MaxWidth="MaxWidth.Medium" Class="mt-4">
    <MudBreadcrumbs Separator="separator" Class="mb-4">
        <MudBreadcrumbItem Href="/forums">Forums</MudBreadcrumbItem>
        <MudBreadcrumbItem Href="/forum/latest">Derniers sujets</MudBreadcrumbItem>
        <MudBreadcrumbItem>Nouveau sujet</MudBreadcrumbItem>
    </MudBreadcrumbs>

    <MudPaper Class="pa-6 rounded-xl" Elevation="3" Style="background-color:#232634;">
        <MudText Typo="Typo.h5" Class="mb-4">Créer un nouveau sujet</MudText>
        <MudForm @ref="form" Model="topicModel">
            <MudTextField T="string" Label="Titre" @bind-Value="topicModel.Title" Required="true" MaxLength="200" Class="mb-4" />
            <MudTextField T="string" Label="Message" @bind-Value="topicModel.Content" Required="true" Lines="6" MaxLength="5000" TextArea="true" Class="mb-4" />

            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="HandleSubmit" ButtonType="ButtonType.Button" Disabled="isSubmitting" StartIcon="@Icons.Material.Filled.Send">
                @(isSubmitting ? "Envoi..." : "Publier")
            </MudButton>
        </MudForm>
    </MudPaper>
</MudContainer>

@code {
    private MudForm? form;
    private CreateForumTopicDto topicModel = new();
    private bool isSubmitting = false;

    protected override async Task OnInitializedAsync()
    {
        
    }

    private async Task HandleSubmit()
    {
        await form!.Validate();
        if (!form.IsValid) return;

        isSubmitting = true;
        try
        {
            
            var createdTopic = await ForumService.CreateTopicAsync(topicModel);
            Snackbar.Add("Sujet créé avec succès !", Severity.Success);
            NavigationManager.NavigateTo($"/forum/topic/{createdTopic.Id}");
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Erreur lors de la création du sujet : {ex.Message}", Severity.Error);
        }
        finally
        {
            isSubmitting = false;
        }
    }
}
