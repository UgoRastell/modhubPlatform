@page "/account/settings"
@using System.ComponentModel.DataAnnotations
@using Frontend.Components.Settings
@inject ISnackbar Snackbar
@inject HttpClient Http
@inject NavigationManager NavigationManager

<style>
    .settings-sidebar {
        background-color: #232634;
        width: 240px;
        height: 100%;
    }

    .settings-card {
        border-radius: 16px;
        padding: 24px;
        background-color: #232634;
        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3);
    }

    .settings-danger-card {
        border: 1px solid #ff3b3b;
    }

    .menu-item {
        border-radius: 8px;
    }

    .menu-item:hover {
        background-color: rgba(0, 170, 255, 0.1);
        transition: all 0.2s ease;
    }

    .menu-item.active {
        background-color: rgba(0, 170, 255, 0.2);
    }

    /* Animation for cards */
    .fade-in {
        animation: fadeIn 0.3s ease-in;
    }

    @@keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
    }

    /* Responsive adjustments */
    @@media (max-width: 960px) {
        .settings-card {
            padding: 16px;
        }
    }

    /* Accessibility - prefers reduced motion */
    @@media (prefers-reduced-motion) {
        .fade-in {
            animation: none;
        }
    }
</style>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="py-6">
    <MudText Typo="Typo.h2" Class="mb-2">Paramètres</MudText>
    <MudBreadcrumbs Items="@(new[]
    {
        new BreadcrumbItem("Mon compte", "/account"),
        new BreadcrumbItem("Paramètres", null, true)
    })" />

    <MudGrid Class="mt-4">
        <!-- Sidebar for desktop -->
        <MudItem xs="12" md="3" Class="d-none d-md-flex">
            <MudPaper Class="settings-sidebar pa-3 d-flex flex-column" Elevation="0">
                @foreach (var menuItem in _menuItems)
                {
                    <MudButton StartIcon="@menuItem.Icon" 
                              Color="Color.Inherit"
                              Variant="Variant.Text" 
                              FullWidth="true"
                              Class="@($"menu-item mb-1 py-2 px-3 text-start {(activeSection == menuItem.Section ? "active" : "")}")"
                              OnClick="@(() => SetActiveSection(menuItem.Section))">
                        @menuItem.Text
                    </MudButton>
                }
            </MudPaper>
        </MudItem>

        <!-- Drawer button for mobile -->
        <MudItem xs="12" Class="d-flex d-md-none mb-3">
            <MudButton Variant="Variant.Outlined" 
                      StartIcon="@Icons.Material.Filled.Menu" 
                      FullWidth="true"
                      OnClick="@(() => drawerOpen = true)">
                @GetCurrentSectionName()
            </MudButton>
        </MudItem>

        <!-- Content area -->
        <MudItem xs="12" md="9">
            <div class="fade-in">
                @switch (activeSection)
                {
                    case "profile":
                        <ProfileSection />
                        break;
                    case "security":
                        <SecuritySection />
                        break;
                    case "privacy":
                        <PrivacySection />
                        break;
                    case "payments":
                        <PaymentsSection />
                        break;
                    case "danger":
                        <DangerZoneSection />
                        break;
                }
            </div>
        </MudItem>
    </MudGrid>
</MudContainer>

<!-- Mobile drawer -->
<MudDrawer @bind-Open="drawerOpen" Anchor="Anchor.Left" Elevation="2" Variant="@DrawerVariant.Temporary">
    <MudDrawerHeader>
        <MudText Typo="Typo.h6">Paramètres</MudText>
    </MudDrawerHeader>
    <MudNavMenu>
        @foreach (var menuItem in _menuItems)
        {
            <MudNavLink Icon="@menuItem.Icon" 
                        OnClick="@(() => { SetActiveSection(menuItem.Section); drawerOpen = false; })"
                        Href="javascript:void(0)"
                        Match="NavLinkMatch.All"
                        Class="@(activeSection == menuItem.Section ? "active" : "")">
                @menuItem.Text
            </MudNavLink>
        }
    </MudNavMenu>
</MudDrawer>

@code {
    private string activeSection = "profile";
    private bool drawerOpen = false;

    private class MenuItem
    {
        public string Text { get; set; }
        public string Icon { get; set; }
        public string Section { get; set; }
    }

    private List<MenuItem> _menuItems = new List<MenuItem>
    {
        new MenuItem { Text = "Profil", Icon = Icons.Material.Filled.Person, Section = "profile" },
        new MenuItem { Text = "Sécurité", Icon = Icons.Material.Filled.Security, Section = "security" },
        new MenuItem { Text = "Confidentialité", Icon = Icons.Material.Filled.Lock, Section = "privacy" },
        new MenuItem { Text = "Paiements", Icon = Icons.Material.Filled.CreditCard, Section = "payments" },
        new MenuItem { Text = "Zone critique", Icon = Icons.Material.Filled.Warning, Section = "danger" }
    };

    private void SetActiveSection(string section)
    {
        activeSection = section;
    }

    private string GetCurrentSectionName()
    {
        return _menuItems.FirstOrDefault(m => m.Section == activeSection)?.Text ?? "Paramètres";
    }
}